spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hebe
    username: root
    password: 1234
    driver-class-name: org.mariadb.jdbc.Driver
  mail:
    host: smtp.gmail.com
    port: 587
    username: hebenote.com@gmail.com
    password: sweetgirl3!
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 472611859560-2eoflemc4li0fnskein1ba18oti5gpao.apps.googleusercontent.com
            client-secret: ANc526bM8ndagrCh6MKab4Ns
            scope: # 받을 정보만 적기 ~.~
              - profile
              - email
          facebook:
            client-id: your-client-id
            client-secret: your-client-secret
          kakao:
            authorization-grant-type: authorization_code
            client-id: 024febcd9cf8c5209fa4845a0ea49692 # rest API
            client-secret: UbKAjd18c3A4ZfUKyoGr6qB4Bm7fSKmR
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
            client-authentication-method: POST
            client-name: Kakao
          naver:
            authorization-grant-type: authorization_code
            client-id: eWJGHxatONvyH6r_QbFU # Client ID
            client-secret: 22o1raveeG
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - profile_image
            client-name: Naver

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: properties
            # JSON 형태에서 "properties"라는 key값에 해당하는 value에 회원 정보가 담겨져있다.
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            # JSON 형태에서 "response"라는 key값에 해당하는 value에 회원 정보가 담겨져있다.

  jpa:
    hibernate:
      ddl-auto: update # 최초실행 시 create, 그 이후론 update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  cache:
    type: redis

  # https://github.com/microsoftarchive/redis/releases/tag/win-3.2.100
  # Redis-x64-3.2.100.msi install
  redis:
    host: localhost
    port: 6379


mybatis:
  mapper-locations: mybatis-mapper/**/*.xml
  type-aliases-package: com.hebe

server:
  port: 8080